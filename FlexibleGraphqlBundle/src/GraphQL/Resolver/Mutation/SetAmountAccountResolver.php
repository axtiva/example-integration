<?php

declare (strict_types=1);
namespace App\GraphQL\Resolver\Mutation;

use App\GraphQL\Mapper\EntityToGQLModel;
use App\GraphQL\Model\AccountType;
use App\Repository\AccountRepository;
use Axtiva\FlexibleGraphql\Generator\Exception\NotImplementedResolver;
use GraphQL\Error\UserError;
use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Resolver\ResolverInterface;

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * This is resolver for Mutation.setAmountAccount
 */
final class SetAmountAccountResolver implements ResolverInterface
{
    private AccountRepository $accountRepository;

    public function __construct(AccountRepository $accountRepository)
    {
        $this->accountRepository = $accountRepository;
    }

    function __invoke($rootValue, $args, $context, ResolveInfo $info)
    {
        $account = $this->accountRepository->find($args['idAccount']);
        if (empty($account)) {
            throw new UserError('account not found');
        }

        $account->setAmount($args['amount']);
        $this->accountRepository->save($account);

        $response = new AccountType();
        EntityToGQLModel::account($account, $response);

        return $response;
    }
}