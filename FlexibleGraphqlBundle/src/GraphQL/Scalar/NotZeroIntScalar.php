<?php

declare (strict_types=1);
namespace App\GraphQL\Scalar;

use GraphQL\Error\UserError;
use GraphQL\Language\AST\Node;
use Axtiva\FlexibleGraphql\Resolver\CustomScalarResolverInterface;
use InvalidArgumentException;

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * This is resolver for scalar NotZeroInt
 * Accept not 0 value
 */
final class NotZeroIntScalar implements CustomScalarResolverInterface
{
    public function serialize($value)
    {
        if (!isset($value)) {
            return null;
        }

        $value = (int) $value;
        $this->validate($value);
        return $value;
    }

    public function parseValue($value)
    {
        if (!isset($value)) {
            return null;
        }

        $value = (int) $value;
        $this->validate($value);
        return $value;
    }

    public function parseLiteral(Node $value, ?array $variables = null)
    {
        if (!isset($value->value)) {
            return null;
        }

        $value = (int) $value->value;
        $this->validate($value);
        return $value;
    }

    private function validate(int $value): void
    {
        if ($value === 0) {
            throw new UserError('NotZeroInt accept not 0 value');
        }
    }
}