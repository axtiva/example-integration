<?php

declare (strict_types=1);
namespace App\GraphQL\Representation;

use App\GraphQL\Mapper\EntityToGQLModel;
use App\GraphQL\Model\NamedCurrencyType;
use App\Repository\NamedCurrencyRepository;
use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Federation\Representation;
use Axtiva\FlexibleGraphql\Federation\Resolver\FederationRepresentationResolverInterface;
use Axtiva\FlexibleGraphql\Generator\Exception\NotImplementedResolver;

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * Representation resolver for federated graphql type NamedCurrency
 */
final class NamedCurrencyRepresentation implements FederationRepresentationResolverInterface
{
    private NamedCurrencyRepository $namedCurrencyRepository;

    public function __construct(NamedCurrencyRepository $namedCurrencyRepository)
    {
        $this->namedCurrencyRepository = $namedCurrencyRepository;
    }

    public function getTypeName(): string
    {
        return 'NamedCurrency';
    }

    public function __invoke(Representation $representation, $context, ResolveInfo $info)
    {
        $id = $representation->getFields()['name']; // array from NamedCurrency @key(fields: "name")
        $entity = $this->namedCurrencyRepository->find($id);
        if ($entity) {
            $response = new NamedCurrencyType();
            EntityToGQLModel::namedCurrency($entity, $response);

            return $response;
        }

        return null;
    }
}