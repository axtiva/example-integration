<?php

declare (strict_types=1);
namespace SelfWritten\GraphQL\Resolver\Account;

use GraphQL\Type\Definition\ResolveInfo;
use Axtiva\FlexibleGraphql\Resolver\ResolverInterface;
use SelfWritten\Entity\Account;
use SelfWritten\GraphQL\Mapper\EntityToGQLModel;
use SelfWritten\GraphQL\Model\TransactionType;
use SelfWritten\Repository\TransactionRepository;
use Symfony\Component\Uid\UuidV4;

/**
 * This code is @generated by axtiva/flexible-graphql-php
 * This is resolver for Account.transactions
 */
final class TransactionsResolver implements ResolverInterface
{
    public function __invoke($rootValue, $args, $context, ResolveInfo $info)
    {
        $account = new Account(UuidV4::fromString($rootValue->id));
        foreach ((new TransactionRepository())->findByAccount($account) as $entity) {
            $response = new TransactionType();
            EntityToGQLModel::transaction($entity, $response);

            yield $response;
        }
    }
}